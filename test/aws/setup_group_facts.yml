---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
  - meta: refresh_inventory

  - name: Gather ec2 facts
    ec2_instance_facts:
      region: "{{ aws_region }}"
      filters:
        tag-key: "kubernetes.io/cluster/{{ aws_cluster_id }}"
    register: ec2

  - debug:
      var: groups
    with_items: "{{ ec2.instances }}"
    vars:
      groups: "{{ item.tags['ansible-groups'].split(',') | list }}"

  - debug:
      msg: "{{ ('bootstrap' in groups) | bool }}"
    with_items: "{{ ec2.instances }}"
    vars:
      groups: "{{ item.tags['ansible-groups'].split(',') | list }}"

  - debug:
      msg: "{{ ('bootstrap' in groups) | bool| ternary('yay', 'nay') }}"
    with_items: "{{ ec2.instances }}"
    vars:
      groups: "{{ item.tags['ansible-groups'].split(',') | list }}"

  - debug:
      msg: "{{ ('bootstrap' in groups) | bool| ternary(openshift_bootstrap_ignition_file, omit) }}"
    with_items: "{{ ec2.instances }}"
    vars:
      groups: "{{ item.tags['ansible-groups'].split(',') | list }}"

  - name: Add instance to the group
    add_host:
      name: "{{ item.public_dns_name }}"
      groups: "{{ item.tags['ansible-groups'].split(',') | list }}"
      ignition_file: "{{ ('bootstrap' in groups) | bool | ternary(openshift_bootstrap_ignition_file, omit) }}"
      aws_region: "{{ aws_region }}"
      aws_basedomain: "{{ aws_basedomain }}"
      aws_cluster_id: "{{ aws_cluster_id }}"
      openshift_clusterid: "{{ aws_cluster_id }}"
    with_items: "{{ ec2.instances }}"
    vars:
      groups: "{{ item.tags['ansible-groups'].split(',') | list }}"
